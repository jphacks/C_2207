// Generated by view binder compiler. Do not edit!
package com.example.testprog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testprog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySubCalenderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  @NonNull
  public final EditText editText;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final ListView lvMemoList;

  private ActivitySubCalenderBinding(@NonNull LinearLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnDelete, @NonNull Button btnSave, @NonNull Button button,
      @NonNull Button button2, @NonNull EditText editText, @NonNull EditText etTitle,
      @NonNull ListView lvMemoList) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnDelete = btnDelete;
    this.btnSave = btnSave;
    this.button = button;
    this.button2 = button2;
    this.editText = editText;
    this.etTitle = etTitle;
    this.lvMemoList = lvMemoList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySubCalenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySubCalenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sub_calender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySubCalenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.edit_text;
      EditText editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.lvMemoList;
      ListView lvMemoList = ViewBindings.findChildViewById(rootView, id);
      if (lvMemoList == null) {
        break missingId;
      }

      return new ActivitySubCalenderBinding((LinearLayout) rootView, btnAdd, btnDelete, btnSave,
          button, button2, editText, etTitle, lvMemoList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
